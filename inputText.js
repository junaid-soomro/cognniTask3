module.exports =
  "Job Description: - A monolithic app written in Python 3.9 using up-to-date Django REST Framework version. - Uses PostgreSQL, ElasticSearch and Redis as data storage. - Uses Celery + Redis as a task queuing system. - Additionally, there is a couple of microservices written in Python and using managed and serverless capabilities of - GCP (Cloud Functions, PubSub). - There is an ongoing effort to separate some features and functions into microservices. - Infrastructure, CI/CD & PM. - Production systems are deployed on Google Cloud Platform using Google Compute Engine instances (for DBMS) and Google Kubernetes Engine (for application containers). - We use Terraform, Ansible and Helm for infrastructure deployment - We use GitLab as a CI/CD system, Code Review, test automation pipelines etc. - We use JIRA and Redmine (legacy) for Project Management Data Stack. - Google Composer (Apache Airflow) for data collection and transformation. - BigQuery for warehousing - Google Cloud Storage for data lake - PowerBI for reporting Job Description: - A monolithic app written in Python 3.9 using up-to-date Django REST Framework version. - Uses PostgreSQL, ElasticSearch and Redis as data storage. - Uses Celery + Redis as a task queuing system. - Additionally, there is a couple of microservices written in Python and using managed and serverless capabilities of - GCP (Cloud Functions, PubSub). - There is an ongoing effort to separate some features and functions into microservices. - Infrastructure, CI/CD & PM. - Production systems are deployed on Google Cloud Platform using Google Compute Engine instances (for DBMS) and Google Kubernetes Engine (for application containers). - We use Terraform, Ansible and Helm for infrastructure deployment - We use GitLab as a CI/CD system, Code Review, test automation pipelines etc. - We use JIRA and Redmine (legacy) for Project Management Data Stack. - Google Composer (Apache Airflow) for data collection and transformation. - BigQuery for warehousing - Google Cloud Storage for data lake - PowerBI for reporting Job Description: - A monolithic app written in Python 3.9 using up-to-date Django REST Framework version. - Uses PostgreSQL, ElasticSearch and Redis as data storage. - Uses Celery + Redis as a task queuing system. - Additionally, there is a couple of microservices written in Python and using managed and serverless capabilities of - GCP (Cloud Functions, PubSub). - There is an ongoing effort to separate some features and functions into microservices. - Infrastructure, CI/CD & PM. - Production systems are deployed on Google Cloud Platform using Google Compute Engine instances (for DBMS) and Google Kubernetes Engine (for application containers). - We use Terraform, Ansible and Helm for infrastructure deployment - We use GitLab as a CI/CD system, Code Review, test automation pipelines etc. - We use JIRA and Redmine (legacy) for Project Management Data Stack. - Google Composer (Apache Airflow) for data collection and transformation. - BigQuery for warehousing - Google Cloud Storage for data lake - PowerBI for reporting Job Description: - A monolithic app written in Python 3.9 using up-to-date Django REST Framework version. - Uses PostgreSQL, ElasticSearch and Redis as data storage. - Uses Celery + Redis as a task queuing system. - Additionally, there is a couple of microservices written in Python and using managed and serverless capabilities of - GCP (Cloud Functions, PubSub). - There is an ongoing effort to separate some features and functions into microservices. - Infrastructure, CI/CD & PM. - Production systems are deployed on Google Cloud Platform using Google Compute Engine instances (for DBMS) and Google Kubernetes Engine (for application containers). - We use Terraform, Ansible and Helm for infrastructure deployment - We use GitLab as a CI/CD system, Code Review, test automation pipelines etc. - We use JIRA and Redmine (legacy) for Project Management Data Stack. - Google Composer (Apache Airflow) for data collection and transformation. - BigQuery for warehousing - Google Cloud Storage for data lake - PowerBI for reporting Job Description: - A monolithic app written in Python 3.9 using up-to-date Django REST Framework version. - Uses PostgreSQL, ElasticSearch and Redis as data storage. - Uses Celery + Redis as a task queuing system. - Additionally, there is a couple of microservices written in Python and using managed and serverless capabilities of - GCP (Cloud Functions, PubSub). - There is an ongoing effort to separate some features and functions into microservices. - Infrastructure, CI/CD & PM. - Production systems are deployed on Google Cloud Platform using Google Compute Engine instances (for DBMS) and Google Kubernetes Engine (for application containers). - We use Terraform, Ansible and Helm for infrastructure deployment - We use GitLab as a CI/CD system, Code Review, test automation pipelines etc. - We use JIRA and Redmine (legacy) for Project Management Data Stack. - Google Composer (Apache Airflow) for data collection and transformation. - BigQuery for warehousing - Google Cloud Storage for data lake - PowerBI for reporting Job Description: - A monolithic app written in Python 3.9 using up-to-date Django REST Framework version. - Uses PostgreSQL, ElasticSearch and Redis as data storage. - Uses Celery + Redis as a task queuing system. - Additionally, there is a couple of microservices written in Python and using managed and serverless capabilities of - GCP (Cloud Functions, PubSub). - There is an ongoing effort to separate some features and functions into microservices. - Infrastructure, CI/CD & PM. - Production systems are deployed on Google Cloud Platform using Google Compute Engine instances (for DBMS) and Google Kubernetes Engine (for application containers). - We use Terraform, Ansible and Helm for infrastructure deployment - We use GitLab as a CI/CD system, Code Review, test automation pipelines etc. - We use JIRA and Redmine (legacy) for Project Management Data Stack. - Google Composer (Apache Airflow) for data collection and transformation. - BigQuery for warehousing - Google Cloud Storage for data lake - PowerBI for reporting Job Description: - A monolithic app written in Python 3.9 using up-to-date Django REST Framework version. - Uses PostgreSQL, ElasticSearch and Redis as data storage. - Uses Celery + Redis as a task queuing system. - Additionally, there is a couple of microservices written in Python and using managed and serverless capabilities of - GCP (Cloud Functions, PubSub). - There is an ongoing effort to separate some features and functions into microservices. - Infrastructure, CI/CD & PM. - Production systems are deployed on Google Cloud Platform using Google Compute Engine instances (for DBMS) and Google Kubernetes Engine (for application containers). - We use Terraform, Ansible and Helm for infrastructure deployment - We use GitLab as a CI/CD system, Code Review, test automation pipelines etc. - We use JIRA and Redmine (legacy) for Project Management Data Stack. - Google Composer (Apache Airflow) for data collection and transformation. - BigQuery for warehousing - Google Cloud Storage for data lake - PowerBI for reporting Job Description: - A monolithic app written in Python 3.9 using up-to-date Django REST Framework version. - Uses PostgreSQL, ElasticSearch and Redis as data storage. - Uses Celery + Redis as a task queuing system. - Additionally, there is a couple of microservices written in Python and using managed and serverless capabilities of - GCP (Cloud Functions, PubSub). - There is an ongoing effort to separate some features and functions into microservices. - Infrastructure, CI/CD & PM. - Production systems are deployed on Google Cloud Platform using Google Compute Engine instances (for DBMS) and Google Kubernetes Engine (for application containers). - We use Terraform, Ansible and Helm for infrastructure deployment - We use GitLab as a CI/CD system, Code Review, test automation pipelines etc. - We use JIRA and Redmine (legacy) for Project Management Data Stack. - Google Composer (Apache Airflow) for data collection and transformation. - BigQuery for warehousing - Google Cloud Storage for data lake - PowerBI for reporting Job Description: - A monolithic app written in Python 3.9 using up-to-date Django REST Framework version. - Uses PostgreSQL, ElasticSearch and Redis as data storage. - Uses Celery + Redis as a task queuing system. - Additionally, there is a couple of microservices written in Python and using managed and serverless capabilities of - GCP (Cloud Functions, PubSub). - There is an ongoing effort to separate some features and functions into microservices. - Infrastructure, CI/CD & PM. - Production systems are deployed on Google Cloud Platform using Google Compute Engine instances (for DBMS) and Google Kubernetes Engine (for application containers). - We use Terraform, Ansible and Helm for infrastructure deployment - We use GitLab as a CI/CD system, Code Review, test automation pipelines etc. - We use JIRA and Redmine (legacy) for Project Management Data Stack. - Google Composer (Apache Airflow) for data collection and transformation. - BigQuery for warehousing - Google Cloud Storage for data lake - PowerBI for reporting Job Description: - A monolithic app written in Python 3.9 using up-to-date Django REST Framework version. - Uses PostgreSQL, ElasticSearch and Redis as data storage. - Uses Celery + Redis as a task queuing system. - Additionally, there is a couple of microservices written in Python and using managed and serverless capabilities of - GCP (Cloud Functions, PubSub). - There is an ongoing effort to separate some features and functions into microservices. - Infrastructure, CI/CD & PM. - Production systems are deployed on Google Cloud Platform using Google Compute Engine instances (for DBMS) and Google Kubernetes Engine (for application containers). - We use Terraform, Ansible and Helm for infrastructure deployment - We use GitLab as a CI/CD system, Code Review, test automation pipelines etc. - We use JIRA and Redmine (legacy) for Project Management Data Stack. - Google Composer (Apache Airflow) for data collection and transformation. - BigQuery for warehousing - Google Cloud Storage for data lake - PowerBI for reporting Job Description: - A monolithic app written in Python 3.9 using up-to-date Django REST Framework version. - Uses PostgreSQL, ElasticSearch and Redis as data storage. - Uses Celery + Redis as a task queuing system. - Additionally, there is a couple of microservices written in Python and using managed and serverless capabilities of - GCP (Cloud Functions, PubSub). - There is an ongoing effort to separate some features and functions into microservices. - Infrastructure, CI/CD & PM. - Production systems are deployed on Google Cloud Platform using Google Compute Engine instances (for DBMS) and Google Kubernetes Engine (for application containers). - We use Terraform, Ansible and Helm for infrastructure deployment - We use GitLab as a CI/CD system, Code Review, test automation pipelines etc. - We use JIRA and Redmine (legacy) for Project Management Data Stack. - Google Composer (Apache Airflow) for data collection and transformation. - BigQuery for warehousing - Google Cloud Storage for data lake - PowerBI for reporting Job Description: - A monolithic app written in Python 3.9 using up-to-date Django REST Framework version. - Uses PostgreSQL, ElasticSearch and Redis as data storage. - Uses Celery + Redis as a task queuing system. - Additionally, there is a couple of microservices written in Python and using managed and serverless capabilities of - GCP (Cloud Functions, PubSub). - There is an ongoing effort to separate some features and functions into microservices. - Infrastructure, dmine (legacy) for Project Management Data Stack. - Google Composer (Apache Airflow) for data collection and transformation. - BigQuery for warehousing - Google Cloud Storage i am not going to do th";
